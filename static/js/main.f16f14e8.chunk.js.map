{"version":3,"sources":["index.js","webpack:///./src/styles.css?de17"],"names":["lines","squaresAtom","atom","Array","fill","debugLabel","nextValueAtom","get","filter","r","length","winnerAtom","i","a","b","c","resetSquaresAtom","_get","set","selectSquareAtom","square","map","sqr","sqrIndex","statusAtom","every","Boolean","Squares","useAtomicDevtool","squares","selectSquare","el","Status","gameStatus","reset","End","useWindowSize","width","height","gameWinner","App","color","textShadow","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f16f14e8.chunk.js","sourcesContent":["import ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport useWindowSize from \"react-use/lib/useWindowSize\";\nimport Confetti from \"react-confetti\";\nimport { atom, Provider } from \"jotai\";\nimport { useAtomicDevtool, AtomicDebugger } from \"atomic-devtools\";\n\nconst lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]] // prettier-ignore\n\nconst squaresAtom = atom(Array(9).fill(null));\nsquaresAtom.debugLabel = \"squaresAtom\"\n\nconst nextValueAtom = atom((get) =>\n  get(squaresAtom).filter((r) => r === \"O\").length ===\n    get(squaresAtom).filter((r) => r === \"X\").length\n    ? \"X\"\n    : \"O\"\n);\nnextValueAtom.debugLabel = \"nextValueAtom\"\n\nconst winnerAtom = atom((get) => {\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (\n      get(squaresAtom)[a] &&\n      get(squaresAtom)[a] === get(squaresAtom)[b] &&\n      get(squaresAtom)[a] === get(squaresAtom)[c]\n    )\n      return get(squaresAtom)[a];\n  }\n  return null;\n});\n\nconst resetSquaresAtom = atom(null, (_get, set) =>\n  set(squaresAtom, Array(9).fill(null))\n);\n\nconst selectSquareAtom = atom(\n  (get) => get(squaresAtom),\n  (get, set, square) => {\n    if (get(winnerAtom) || get(squaresAtom)[square]) return;\n    set(\n      squaresAtom,\n      get(squaresAtom).map((sqr, sqrIndex) =>\n        sqrIndex === square ? get(nextValueAtom) : sqr\n      )\n    );\n  }\n);\n\nconst statusAtom = atom((get) => {\n  return get(winnerAtom)\n    ? `Winner: ${get(winnerAtom)}`\n    : get(squaresAtom).every(Boolean)\n      ? `Scratch`\n      : `Next player: ${get(nextValueAtom)}`;\n});\n\n\nfunction Squares({ i }) {\n  const [squares, selectSquare] = useAtomicDevtool(selectSquareAtom, \"selectSquareAtom\");\n  return (\n    <>\n      {squares.map((el, i) => (\n        <button key={i} className={`square ${el}`} onClick={() => selectSquare(i)}>\n          {el}\n        </button>\n      ))}\n    </>\n  );\n}\n\nfunction Status() {\n  const [gameStatus] = useAtomicDevtool(statusAtom, \"statusAtom\");\n  const [, reset] = useAtomicDevtool(resetSquaresAtom, \"resetSquaresAtom\");\n  return (\n    <div className=\"status\">\n      <div className=\"message\">{gameStatus}</div>\n      <button onClick={() => reset()}>Reset</button>\n    </div>\n  );\n}\n\nfunction End() {\n  const { width, height } = useWindowSize();\n  const [gameWinner] = useAtomicDevtool(winnerAtom, \"winnerAtom\");\n  return (\n    gameWinner && (\n      <>\n        <Confetti\n          width={width}\n          height={height}\n          colors={[gameWinner === \"X\" ? \"#464646\" : \"#1cb5c9\", \"white\"]}\n        />\n      </>\n    )\n  );\n}\n\nfunction App() {\n  return (\n    <Provider>\n      <AtomicDebugger>\n        <div className=\"game\">\n          <h1>\n           <span style={{color:\"#464646\", textShadow: \"0.25rem 0.25rem 0.75rem rgba(139, 139, 139, 0.75)\"}}>x</span>\n        <span>o</span>\n        x\n        <span>o</span>\n          </h1>\n          <Status />\n          <div className=\"board\" >\n            <Squares />\n          </div>\n        </div>\n        <End />\n      </AtomicDebugger>\n    </Provider>)\n}\n\nReactDOM.render(<App />,\n  document.getElementById(\"root\")\n);","// extracted by mini-css-extract-plugin"],"sourceRoot":""}