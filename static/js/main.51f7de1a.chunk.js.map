{"version":3,"sources":["index.js"],"names":["lines","squaresAtom","atom","Array","fill","debugLabel","nextValueAtom","get","filter","r","length","winnerAtom","i","a","b","c","resetSquaresAtom","_get","set","selectSquareAtom","square","map","sqr","sqrIndex","statusAtom","every","Boolean","Squares","useAtomicDevtool","squares","selectSquare","el","className","onClick","Status","gameStatus","reset","End","useWindowSize","width","height","gameWinner","colors","App","style","color","textShadow","ReactDOM","render","document","getElementById"],"mappings":"uNAOMA,EAAQ,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAE7FC,EAAcC,YAAKC,MAAM,GAAGC,KAAK,OACvCH,EAAYI,WAAa,cAEzB,IAAMC,EAAgBJ,aAAK,SAACK,GAAD,OACzBA,EAAIN,GAAaO,QAAO,SAACC,GAAD,MAAa,MAANA,KAAWC,SACxCH,EAAIN,GAAaO,QAAO,SAACC,GAAD,MAAa,MAANA,KAAWC,OACxC,IACA,OAENJ,EAAcD,WAAa,gBAE3B,IAAMM,EAAaT,aAAK,SAACK,GACvB,IAAK,IAAIK,EAAI,EAAGA,EAAIZ,EAAMU,OAAQE,IAAK,CAAC,IAAD,cACnBZ,EAAMY,GADa,GAC9BC,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GACER,EAAIN,GAAaY,IACjBN,EAAIN,GAAaY,KAAON,EAAIN,GAAaa,IACzCP,EAAIN,GAAaY,KAAON,EAAIN,GAAac,GAEzC,OAAOR,EAAIN,GAAaY,GAE5B,OAAO,QAGHG,EAAmBd,YAAK,MAAM,SAACe,EAAMC,GAAP,OAClCA,EAAIjB,EAAaE,MAAM,GAAGC,KAAK,UAG3Be,EAAmBjB,aACvB,SAACK,GAAD,OAASA,EAAIN,MACb,SAACM,EAAKW,EAAKE,GACLb,EAAII,IAAeJ,EAAIN,GAAamB,IACxCF,EACEjB,EACAM,EAAIN,GAAaoB,KAAI,SAACC,EAAKC,GAAN,OACnBA,IAAaH,EAASb,EAAID,GAAiBgB,SAM7CE,EAAatB,aAAK,SAACK,GACvB,OAAOA,EAAII,GAAJ,kBACQJ,EAAII,IACfJ,EAAIN,GAAawB,MAAMC,SAAvB,iCAEkBnB,EAAID,OAI5B,SAASqB,EAAT,GAAwB,EAALf,EAAM,IAAD,EACUgB,YAAiBT,EAAkB,oBAD7C,mBACfU,EADe,KACNC,EADM,KAEtB,OACE,mCACGD,EAAQR,KAAI,SAACU,EAAInB,GAAL,OACX,wBAAgBoB,UAAS,iBAAYD,GAAME,QAAS,kBAAMH,EAAalB,IAAvE,SACGmB,GADUnB,QAQrB,SAASsB,IAAU,IAAD,EACKN,YAAiBJ,EAAY,cAA3CW,EADS,sBAEEP,YAAiBZ,EAAkB,oBAA5CoB,EAFO,oBAGhB,OACE,sBAAKJ,UAAU,SAAf,UACE,qBAAKA,UAAU,UAAf,SAA0BG,IAC1B,wBAAQF,QAAS,kBAAMG,KAAvB,sBAKN,SAASC,IAAO,IAAD,EACaC,MAAlBC,EADK,EACLA,MAAOC,EADF,EACEA,OADF,EAEQZ,YAAiBjB,EAAY,cAA3C8B,EAFM,oBAGb,OACEA,GACE,mCACE,cAAC,IAAD,CACEF,MAAOA,EACPC,OAAQA,EACRE,OAAQ,CAAgB,MAAfD,EAAqB,UAAY,UAAW,aAO/D,SAASE,IACP,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,sBAAKX,UAAU,OAAf,UACE,+BACC,sBAAMY,MAAO,CAACC,MAAM,UAAWC,WAAY,qDAA3C,eACH,qCAFE,IAIF,wCAEE,cAACZ,EAAD,IACA,qBAAKF,UAAU,QAAf,SACE,cAACL,EAAD,SAGJ,cAACU,EAAD,SAKRU,IAASC,OAAO,cAACL,EAAD,IACdM,SAASC,eAAe,U","file":"static/js/main.51f7de1a.chunk.js","sourcesContent":["import ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport useWindowSize from \"react-use/lib/useWindowSize\";\nimport Confetti from \"react-confetti\";\nimport { atom, Provider } from \"jotai\";\nimport { useAtomicDevtool, AtomicDebugger } from \"atomic-devtools\";\n\nconst lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]] // prettier-ignore\n\nconst squaresAtom = atom(Array(9).fill(null));\nsquaresAtom.debugLabel = \"squaresAtom\"\n\nconst nextValueAtom = atom((get) =>\n  get(squaresAtom).filter((r) => r === \"O\").length ===\n    get(squaresAtom).filter((r) => r === \"X\").length\n    ? \"X\"\n    : \"O\"\n);\nnextValueAtom.debugLabel = \"nextValueAtom\"\n\nconst winnerAtom = atom((get) => {\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (\n      get(squaresAtom)[a] &&\n      get(squaresAtom)[a] === get(squaresAtom)[b] &&\n      get(squaresAtom)[a] === get(squaresAtom)[c]\n    )\n      return get(squaresAtom)[a];\n  }\n  return null;\n});\n\nconst resetSquaresAtom = atom(null, (_get, set) =>\n  set(squaresAtom, Array(9).fill(null))\n);\n\nconst selectSquareAtom = atom(\n  (get) => get(squaresAtom),\n  (get, set, square) => {\n    if (get(winnerAtom) || get(squaresAtom)[square]) return;\n    set(\n      squaresAtom,\n      get(squaresAtom).map((sqr, sqrIndex) =>\n        sqrIndex === square ? get(nextValueAtom) : sqr\n      )\n    );\n  }\n);\n\nconst statusAtom = atom((get) => {\n  return get(winnerAtom)\n    ? `Winner: ${get(winnerAtom)}`\n    : get(squaresAtom).every(Boolean)\n      ? `Scratch`\n      : `Next player: ${get(nextValueAtom)}`;\n});\n\n\nfunction Squares({ i }) {\n  const [squares, selectSquare] = useAtomicDevtool(selectSquareAtom, \"selectSquareAtom\");\n  return (\n    <>\n      {squares.map((el, i) => (\n        <button key={i} className={`square ${el}`} onClick={() => selectSquare(i)}>\n          {el}\n        </button>\n      ))}\n    </>\n  );\n}\n\nfunction Status() {\n  const [gameStatus] = useAtomicDevtool(statusAtom, \"statusAtom\");\n  const [, reset] = useAtomicDevtool(resetSquaresAtom, \"resetSquaresAtom\");\n  return (\n    <div className=\"status\">\n      <div className=\"message\">{gameStatus}</div>\n      <button onClick={() => reset()}>Reset</button>\n    </div>\n  );\n}\n\nfunction End() {\n  const { width, height } = useWindowSize();\n  const [gameWinner] = useAtomicDevtool(winnerAtom, \"winnerAtom\");\n  return (\n    gameWinner && (\n      <>\n        <Confetti\n          width={width}\n          height={height}\n          colors={[gameWinner === \"X\" ? \"#464646\" : \"#1cb5c9\", \"white\"]}\n        />\n      </>\n    )\n  );\n}\n\nfunction App() {\n  return (\n    <Provider>\n      <AtomicDebugger>\n        <div className=\"game\">\n          <h1>\n           <span style={{color:\"#464646\", textShadow: \"0.25rem 0.25rem 0.75rem rgba(139, 139, 139, 0.75)\"}}>x</span>\n        <span>o</span>\n        x\n        <span>o</span>\n          </h1>\n          <Status />\n          <div className=\"board\" >\n            <Squares />\n          </div>\n        </div>\n        <End />\n      </AtomicDebugger>\n    </Provider>)\n}\n\nReactDOM.render(<App />,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}